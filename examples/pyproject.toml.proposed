# Example pyproject.toml with type checking and security scanning
# Don't just copy-paste this whole file! Merge these sections into your existing pyproject.toml

[project]
name = "PendingChangesBot-ng"
description = "A bot to help review pending changes on Wikimedia projects"
requires-python = ">=3.9"

# ============================================================================
# RUFF SETUP (with security rules added)
# ============================================================================
[tool.ruff]
line-length = 100
target-version = "py39"

extend-exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv",
    "migrations",
    "static"
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort (import sorting)
    "UP",  # pyupgrade (enforce modern Python syntax)
    "S",   # bandit security rules <- THIS IS NEW
]

ignore = [
    "E203",
    "UP007",  # Use X | Y for type annotations (needs Python 3.10+, we're on 3.9)
    # Add security rule exceptions here if needed:
    # "S101",  # allow assert statements (useful in tests)
    # "S311",  # allow random module (when you don't need cryptographic randomness)
]

# Let tests do test things (asserts, hardcoded test data, etc.)
[tool.ruff.lint.per-file-ignores]
"*/tests/*" = ["S101", "S105", "S106"]

[tool.ruff.lint.pycodestyle]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

# ============================================================================
# MYPY TYPE CHECKING
# ============================================================================
[tool.mypy]
python_version = "3.9"
plugins = ["mypy_django_plugin.main"]

# What to complain about
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
show_error_codes = true
pretty = true

# Starting lenient here - can tighten these later once we fix initial errors
disallow_untyped_defs = false       # TODO: enable once we add more type hints
disallow_incomplete_defs = false    # TODO: enable once we add more type hints
disallow_untyped_calls = false      # TODO: enable once third-party libs are typed
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true

# Other useful checks
warn_redundant_casts = true
warn_unreachable = true

# Skip these directories/files
exclude = [
    "migrations/",
    "user-config\\.py",
    "__pycache__",
    "build/",
    "dist/",
]

# Third-party libraries that don't have type stubs
[[tool.mypy.overrides]]
module = [
    "pywikibot.*",
    "mwparserfromhell.*",
]
ignore_missing_imports = true

# Django configuration
[tool.django-stubs]
django_settings_module = "reviewer.settings"
strict_settings = false  # keeping this off since we use some dynamic settings
