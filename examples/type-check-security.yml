name: Type Checking & Security Scanning

# Run on every push and PR to catch issues early
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # ============================================================================
  # Job 1: Type Checking with mypy
  # ============================================================================
  type-check:
    name: Type Check (mypy)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run mypy type checking
        run: |
          cd app && python -m mypy reviews --config-file=../pyproject.toml
        # Optional: start with continue-on-error during rollout
        # continue-on-error: true

      - name: Comment on PR (if type errors found)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Type checking failed**\n\nRun `cd app && python -m mypy reviews --config-file=../pyproject.toml` locally to see the errors.'
            })

  # ============================================================================
  # Job 2: Security Scanning with Ruff (Bandit rules)
  # ============================================================================
  security-scan:
    name: Security Scan (Ruff/Bandit)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Ruff security checks
        run: |
          python -m ruff check --select S app/
        # Optional: start with continue-on-error during rollout
        # continue-on-error: true

      - name: Comment on PR (if security issues found)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è **Security scan found potential issues**\n\nRun `python -m ruff check --select S app/` locally to see details.\n\nIf these are false positives, you can add `# noqa: SXXX` comments with explanations.'
            })

  # ============================================================================
  # Job 3: Dependency Vulnerability Scanning with pip-audit
  # ============================================================================
  dependency-scan:
    name: Dependency Scan (pip-audit)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit

      - name: Run pip-audit on requirements.txt
        run: |
          python -m pip_audit -r requirements.txt --desc
        # Optional: start with continue-on-error during rollout
        # continue-on-error: true

      - name: Comment on PR (if vulnerabilities found)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üîí **Dependency vulnerabilities detected**\n\nRun `python -m pip_audit -r requirements.txt --desc` locally to see which packages need upgrading.\n\nPlease update vulnerable dependencies or document why upgrades aren\'t possible.'
            })

  # ============================================================================
  # Job 4: Summary (all checks must pass)
  # ============================================================================
  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [type-check, security-scan, dependency-scan]

    steps:
      - name: All checks passed
        run: |
          echo "‚úÖ All type checking and security scans passed!"
