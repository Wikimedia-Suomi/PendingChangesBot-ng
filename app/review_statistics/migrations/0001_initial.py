# Generated by Django 4.2.25 on 2025-10-27 23:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reviews', '0018_alter_reviewactivity_unique_together_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewStatisticsMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_refreshed_at', models.DateTimeField(auto_now=True)),
                ('last_data_loaded_at', models.DateTimeField(blank=True, help_text='Timestamp when statistics data was last loaded from MediaWiki', null=True)),
                ('total_records', models.IntegerField(default=0)),
                ('oldest_review_timestamp', models.DateTimeField(blank=True, null=True)),
                ('newest_review_timestamp', models.DateTimeField(blank=True, null=True)),
                ('max_log_id', models.BigIntegerField(blank=True, help_text='Maximum log_id fetched (for incremental updates)', null=True)),
                ('wiki', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics_metadata', to='reviews.wiki')),
            ],
            options={
                'verbose_name_plural': 'Review statistics metadata',
                'db_table': 'reviews_reviewstatisticsmetadata',
            },
        ),
        migrations.CreateModel(
            name='ReviewStatisticsCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_name', models.CharField(max_length=255)),
                ('reviewed_user_name', models.CharField(max_length=255)),
                ('page_title', models.CharField(max_length=500)),
                ('page_id', models.BigIntegerField()),
                ('reviewed_revision_id', models.BigIntegerField()),
                ('pending_revision_id', models.BigIntegerField()),
                ('reviewed_timestamp', models.DateTimeField()),
                ('pending_timestamp', models.DateTimeField()),
                ('review_delay_days', models.IntegerField(help_text='Review delay in days')),
                ('fetched_at', models.DateTimeField(auto_now=True)),
                ('wiki', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_statistics', to='reviews.wiki')),
            ],
            options={
                'db_table': 'reviews_reviewstatisticscache',
                'ordering': ['-reviewed_timestamp'],
                'indexes': [models.Index(fields=['wiki', 'reviewer_name'], name='reviews_rev_wiki_id_cf1e3a_idx'), models.Index(fields=['wiki', 'reviewed_user_name'], name='reviews_rev_wiki_id_2d152d_idx'), models.Index(fields=['wiki', 'reviewed_timestamp'], name='reviews_rev_wiki_id_e6065e_idx')],
                'unique_together': {('wiki', 'reviewed_revision_id')},
            },
        ),
        migrations.CreateModel(
            name='ReviewActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of the review activity')),
                ('number_of_reviewers', models.IntegerField(help_text='Number of unique reviewers on this date')),
                ('number_of_reviews', models.IntegerField(help_text='Total number of reviews on this date')),
                ('number_of_pages', models.IntegerField(help_text='Number of pages reviewed on this date')),
                ('reviews_per_reviewer', models.FloatField(blank=True, help_text='Average reviews per reviewer', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('wiki', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_activity', to='reviews.wiki')),
            ],
            options={
                'verbose_name_plural': 'Review Activity',
                'db_table': 'reviews_reviewactivity',
                'ordering': ['-date'],
                'unique_together': {('wiki', 'date')},
            },
        ),
        migrations.CreateModel(
            name='FlaggedRevsStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of the statistics (monthly resolution)')),
                ('total_pages_ns0', models.IntegerField(blank=True, help_text='Total articles in main namespace', null=True)),
                ('synced_pages_ns0', models.IntegerField(blank=True, help_text='Articles reviewed to current revision', null=True)),
                ('reviewed_pages_ns0', models.IntegerField(blank=True, help_text='Articles with at least one reviewed revision', null=True)),
                ('pending_lag_average', models.FloatField(blank=True, help_text='Average time articles wait for review', null=True)),
                ('pending_changes', models.IntegerField(blank=True, help_text='Calculated as reviewedPages_ns0 - syncedPages_ns0', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('wiki', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flaggedrevs_statistics', to='reviews.wiki')),
            ],
            options={
                'verbose_name_plural': 'FlaggedRevs Statistics',
                'db_table': 'reviews_flaggedrevsstatistics',
                'ordering': ['-date'],
                'unique_together': {('wiki', 'date')},
            },
        ),
    ]
